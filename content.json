[{"title":"[alg]大盗阿福","date":"2017-04-09T15:35:54.000Z","path":"2017/04/09/alg-大盗阿福/","text":"final1: 大盗阿福 描述阿福是一名经验丰富的大盗。趁着月黑风高，阿福打算今晚洗劫一条街上的店铺。这条街上一共有 N 家店铺，每家店中都有一些现金。阿福事先调查得知，只有当他同时洗劫了两家相邻的店铺时，街上的报警系统才会启动，然后警察就会蜂拥而至。作为一向谨慎作案的大盗，阿福不愿意冒着被警察追捕的风险行窃。他想知道，在不惊动警察的情况下，他今晚最多可以得到多少现金？ 输入输入的第一行是一个整数 T (T &lt;= 50) ，表示一共有 T 组数据。接下来的每组数据，第一行是一个整数 N (1 &lt;= N &lt;= 100, 000) ，表示一共有 N 家店铺。第二行是 N 个被空格分开的正整数，表示每一家店铺中的现金数量。每家店铺中的现金数量均不超过 1000 。 输出对于每组数据，输出一行。该行包含一个整数，表示阿福在不惊动警察的情况下可以得到的现金数量。 样例输入12345231 8 2410 7 6 14 样例输出12824 提示对于第一组样例，阿福选择第 2 家店铺行窃，获得的现金数量为 8 。对于第二组样例，阿福选择第 1 和 4 家店铺行窃，获得的现金数量为 10 + 14 = 24。 analyse解析第二个样例的过程 arr init 10 7 6 14 a1 0- 0- 10- 7- 16- a2 0- 0- 0- 10- 10- a3 0+ 10+ 7+ 16+ 24+ - 表示到目前为止曾经的值+ 表示加入当前值能获得的最大值 整个过程其实就三种值,曾经的最大值,刚刚获得的最大值,这次能获得的最大值?递推式: a1‘ = a3a2‘ = max(a1, a2)a3‘ = a2‘ + cur code123456789101112131415161718192021222324252627282930313233//// Created by wonderwater on 17-4-8.//#include &lt;iostream&gt;#include &lt;cstring&gt;using namespace std;int main()&#123;// freopen(\"test.in\", \"r\", stdin);// freopen(\"test.out\", \"w\", stdout); int st, n, x; cin &gt;&gt; st; int s[2][3]; int shift = 0; while(st-- &gt; 0)&#123; memset(s, 0, sizeof(s)); cin &gt;&gt; n;// cout &lt;&lt; \"+\" &lt;&lt; n &lt;&lt; endl; for (int i = 0; i &lt; n; ++i) &#123; cin &gt;&gt; x; s[1 - shift][0] = s[shift][2]; s[1 - shift][1] = max(s[shift][0], s[shift][1]); s[1 - shift][2] = max(s[shift][0], s[shift][1]) + x; shift = 1 - shift;// cout &lt;&lt; n &lt;&lt; \"\\t\" &lt;&lt; x &lt;&lt; \"\\t\" &lt;&lt; s[shift][0] &lt;&lt; \"\\t\" &lt;&lt; s[shift][1] &lt;&lt; \"\\t\" &lt;&lt; s[shift][2] &lt;&lt; \"\\t\" &lt;&lt; endl; &#125; int ret = 0; for (int i = 0; i &lt; 3; ++i) &#123; ret = max(s[shift][i], ret); &#125; cout &lt;&lt; ret &lt;&lt; endl; &#125;&#125;","tags":[{"name":"迭代 初级","slug":"迭代-初级","permalink":"http://wonderwater.me/tags/迭代-初级/"}]},{"title":"你好, 世界","date":"2017-04-03T13:58:23.000Z","path":"2017/04/03/你好-世界/","text":"开始这漫长的徒步……","tags":[]}]